(function(global){"use strict";function extend(target,source){for(const key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}return target;}function resolveColor(value,defaultColor){return typeof value==='string'?value:defaultColor;}function ensureHiDPICanvas(canvas){const ratio=window.devicePixelRatio||1;const rect=canvas.getBoundingClientRect();if(canvas.width!==Math.round(rect.width*ratio)||canvas.height!==Math.round(rect.height*ratio)){canvas.width=Math.max(Math.round(rect.width*ratio),1);canvas.height=Math.max(Math.round(rect.height*ratio),1);}}function Chart(ctx,config){if(!(this instanceof Chart)){return new Chart(ctx,config);}if(!ctx||!ctx.canvas){throw new Error("A valid 2D rendering context is required.");}this.ctx=ctx;this.canvas=ctx.canvas;this.config=extend({type:"line",data:{labels:[],datasets:[]},options:{}},config||{});this.draw();}Chart.prototype.update=function(){this.draw();};Chart.prototype.draw=function(){const ctx=this.ctx;const canvas=this.canvas;ensureHiDPICanvas(canvas);const width=canvas.width;const height=canvas.height;ctx.clearRect(0,0,width,height);const paddingLeft=60;const paddingBottom=50;const paddingTop=30;const paddingRight=20;const drawWidth=Math.max(width-paddingLeft-paddingRight,1);const drawHeight=Math.max(height-paddingTop-paddingBottom,1);const labels=this.config.data.labels||[];const datasets=this.config.data.datasets||[];const values=[];datasets.forEach((set)=>{if(Array.isArray(set.data)){values.push(...set.data.map((value)=>Number.isFinite(value)?Number(value):0));}});const maxValue=values.length?Math.max.apply(null,values.concat([0])):0;const yMax=maxValue>0?maxValue:1;const yStep=Math.max(Math.ceil(yMax/5),1);const options=this.config.options||{};const gridColor="rgba(226,232,240,0.5)";const axisColor="rgba(148,163,184,1)";ctx.save();ctx.translate(paddingLeft,paddingTop);ctx.strokeStyle=gridColor;ctx.lineWidth=1;const horizontalLines=5;for(let i=0;i<=horizontalLines;i+=1){const y=drawHeight-(drawHeight/horizontalLines)*i;ctx.beginPath();ctx.moveTo(0,y);ctx.lineTo(drawWidth,y);ctx.stroke();const value=yStep*i;ctx.fillStyle=axisColor;ctx.font="12px sans-serif";ctx.textBaseline="middle";ctx.fillText(String(Math.round((yMax/horizontalLines)*i)), -10, y);}
ctx.strokeStyle=axisColor;ctx.lineWidth=1.5;ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(0,drawHeight);ctx.lineTo(drawWidth,drawHeight);ctx.stroke();const labelCount=labels.length;ctx.save();ctx.translate(0,drawHeight);ctx.fillStyle=axisColor;ctx.font="12px sans-serif";ctx.textAlign="center";ctx.textBaseline="top";if(labelCount){const step=drawWidth/Math.max(labelCount-1,1);labels.forEach((label,index)=>{const x=step*index;ctx.fillText(String(label),x,8);});}
ctx.restore();datasets.forEach((dataset)=>{if(!Array.isArray(dataset.data)||!dataset.data.length){return;}const lineColor=resolveColor(dataset.borderColor,"rgba(59,130,246,0.9)");const fillColor=resolveColor(dataset.backgroundColor,"rgba(59,130,246,0.3)");const points=dataset.data.map((value,index)=>{const safeValue=Number.isFinite(value)?Number(value):0;const x=labelCount>1?(drawWidth/(labelCount-1))*index:drawWidth/2;const y=drawHeight-((safeValue/yMax)*drawHeight);return{x,y};});ctx.lineWidth=2;ctx.strokeStyle=lineColor;ctx.beginPath();points.forEach((point,index)=>{if(index===0){ctx.moveTo(point.x,point.y);}else{ctx.lineTo(point.x,point.y);}});ctx.stroke();if(dataset.fill){ctx.fillStyle=fillColor;ctx.beginPath();points.forEach((point,index)=>{if(index===0){ctx.moveTo(point.x,point.y);}else{ctx.lineTo(point.x,point.y);}});ctx.lineTo(points[points.length-1].x,drawHeight);ctx.lineTo(points[0].x,drawHeight);ctx.closePath();ctx.fill();}
ctx.fillStyle=lineColor;points.forEach((point)=>{ctx.beginPath();ctx.arc(point.x,point.y,4,0,Math.PI*2);ctx.fill();});});ctx.restore();};Chart.defaults={};Chart.version="0.0.1-flowbite";Chart.register=function(){};global.Chart=Chart;})(typeof window!=='undefined'?window:this);
